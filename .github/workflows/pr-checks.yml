name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  verify:
    runs-on: ubuntu-latest
    env:
      CI: true
      DATABASE_URL: file:${{ github.workspace }}/packages/backend/prisma/dev.db
      # 시크릿이 있는 내부 PR이면 시크릿을, 포크 PR이면 빈 문자열이 들어와 fallback 단계에서 채워집니다.
      BROKER_CREDENTIAL_ENCRYPTION_KEY: ${{ secrets.BROKER_CREDENTIAL_ENCRYPTION_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Enable Corepack
        run: corepack enable

      - name: Prepare pnpm
        run: corepack prepare pnpm@9.15.4 --activate

      - name: Determine pnpm store
        id: pnpm-store
        run: echo "dir=$(pnpm store path --silent)" >> "$GITHUB_OUTPUT"

      - name: Restore pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.dir }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Restore Turborepo cache
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ hashFiles('turbo.json', 'pnpm-lock.yaml') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-${{ hashFiles('turbo.json', 'pnpm-lock.yaml') }}-
            ${{ runner.os }}-turbo-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma Client
        run: pnpm --filter backend prisma:generate

      - name: Generate GraphQL schema & types (gql:all)
        run: pnpm gql:all

      - name: Check GraphQL artifacts up-to-date
        run: |
          # Limit diff check to known generated artifacts to avoid noise
          git add -N packages/backend/schema.graphql || true
          git add -N packages/frontend/src/graphql/__generated__/index.ts || true
          if ! git diff --quiet -- packages/backend/schema.graphql packages/frontend/src/graphql/__generated__/index.ts; then
            echo "❌ GraphQL generated artifacts are outdated. Run 'pnpm gql:all' locally and commit the changes." >&2
            echo "Changed files:" >&2
            git diff --name-only -- packages/backend/schema.graphql packages/frontend/src/graphql/__generated__/index.ts >&2
            exit 1
          else
            echo "✅ GraphQL artifacts are up-to-date.";
          fi

      - name: Lint
        run: pnpm lint

      - name: Build
        run: pnpm build

      - name: Test with coverage thresholds
        run: pnpm test:cov
